{"remainingRequest":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/thread-loader/dist/cjs.js!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/babel-loader/lib/index.js!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/src/shared/event-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/src/shared/event-list.vue","mtime":1579030948224},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport DefaultList from './default-list';\nexport default {\n  props: ['events'],\n  components: {\n    DefaultList: DefaultList\n  },\n  data: function data() {\n    return {\n      formatters: [{\n        field: 'createdAt',\n        as: 'date'\n      }],\n      fields: [{\n        key: 'type',\n        thStyle: 'width: 50px;'\n      }, {\n        key: 'content'\n      }, {\n        key: 'createdAt',\n        label: 'Created @',\n        thStyle: 'width: 150px;'\n      }]\n    };\n  },\n  methods: {\n    addTypeColouring: function addTypeColouring(event) {\n      switch (event.type) {\n        case 'ERROR':\n          event._rowVariant = 'danger';\n          break;\n\n        case 'WARN':\n          event._rowVariant = 'warning';\n          break;\n      }\n    }\n  },\n  computed: {\n    eventEnriched: function eventEnriched() {\n      var _this = this;\n\n      if (this.events !== null) {\n        this.events.forEach(function (event) {\n          _this.addTypeColouring(event);\n        });\n      }\n\n      return this.events;\n    }\n  },\n  created: function created() {}\n};",{"version":3,"sources":["event-list.vue"],"names":[],"mappings":";;;;AAKA,OAAA,WAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,QAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,EAAA,EAAA;AAAA,OADA,CADA;AAIA,MAAA,MAAA,EAAA,CACA;AAAA,QAAA,GAAA,EAAA,MAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,GAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,GAAA,EAAA,WAAA;AAAA,QAAA,KAAA,EAAA,WAAA;AAAA,QAAA,OAAA,EAAA;AAAA,OAHA;AAJA,KAAA;AAUA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,KADA,EACA;AACA,cAAA,KAAA,CAAA,IAAA;AACA,aAAA,OAAA;AAAA,UAAA,KAAA,CAAA,WAAA,GAAA,QAAA;AACA;;AACA,aAAA,MAAA;AAAA,UAAA,KAAA,CAAA,WAAA,GAAA,SAAA;AACA;AAJA;AAMA;AARA,GAjBA;AA2BA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,UAAA,KAAA,MAAA,KAAA,IAAA,EAAA;AACA,aAAA,MAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AAAA,UAAA,KAAA,CAAA,gBAAA,CAAA,KAAA;AAAA,SAAA;AACA;;AACA,aAAA,KAAA,MAAA;AACA;AANA,GA3BA;AAmCA,EAAA,OAAA,EAAA,mBAAA,CAAA;AAnCA,CAAA","sourcesContent":["<template>\n  <default-list :fields=\"fields\" :items=\"this.eventEnriched\" :formatters=\"formatters\"></default-list>\n</template>\n\n<script>\n  import DefaultList from './default-list'\n\n  export default {\n    props: ['events'],\n    components: {\n      DefaultList\n    },\n    data() {\n      return {\n        formatters: [\n          { field: 'createdAt', as: 'date' },\n        ],\n        fields: [\n          { key: 'type', thStyle: 'width: 50px;' },\n          { key: 'content' },\n          { key: 'createdAt', label: 'Created @', thStyle: 'width: 150px;' },\n        ],\n      }\n    },\n    methods: {\n      addTypeColouring(event) {\n        switch (event.type) {\n          case 'ERROR': event._rowVariant = 'danger' \n          break\n          case 'WARN': event._rowVariant = 'warning'\n          break\n        }\n      }\n    },\n    computed: {\n      eventEnriched() {\n        if (this.events !== null) {\n          this.events.forEach(event => { this.addTypeColouring(event) } )\n        }\n        return this.events\n      },\n    },\n    created: function () { },\n  }\n</script>"],"sourceRoot":"src/shared"}]}