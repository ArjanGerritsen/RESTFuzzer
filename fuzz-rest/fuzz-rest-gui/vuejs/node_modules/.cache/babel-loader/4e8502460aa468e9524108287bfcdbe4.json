{"remainingRequest":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/thread-loader/dist/cjs.js!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/babel-loader/lib/index.js!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/src/components/settings/settings-delete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/src/components/settings/settings-delete.vue","mtime":1579030948222},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/ws/git/ou-prototype/fuzz-rest/fuzz-rest-gui/vuejs/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Store from '../../store/store';\nimport RestService from '../../shared/service/rest-service';\nimport MessageService from '../../shared/service/message-service';\nexport default {\n  data: function data() {\n    return {\n      restService: new RestService(this.$bvToast),\n      messageService: new MessageService(this)\n    };\n  },\n  computed: {\n    setting: function setting() {\n      return Store.getters.admin_setting;\n    }\n  },\n  methods: {\n    hide: function hide() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.$refs.modal.hide();\n      });\n    },\n    deleteSetting: function () {\n      var _deleteSetting = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.restService.deleteSetting(this.setting).then(function (response) {\n                  _this2.messageService.info(\"Delete setting\", \"Setting deleted successful.\");\n\n                  Store.commit('admin_setting_set', {\n                    setting: null\n                  });\n                }).catch(function (error) {\n                  _this2.messageService.error(\"An error occured while deleting setting\", error);\n                });\n\n              case 2:\n                this.restService.getAdminSettings().then(function (settings) {\n                  Store.commit('admin_settings_set', {\n                    settings: settings\n                  });\n                }).catch(function (error) {\n                  _this2.messageService.error(\"Couldn't retrieve settings\", error);\n\n                  Store.commit('admin_settings_set', {\n                    settings: []\n                  });\n                });\n                this.hide();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function deleteSetting() {\n        return _deleteSetting.apply(this, arguments);\n      }\n\n      return deleteSetting;\n    }()\n  }\n};",{"version":3,"sources":["settings-delete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAA,KAAA,MAAA,mBAAA;AACA,OAAA,WAAA,MAAA,mCAAA;AACA,OAAA,cAAA,MAAA,sCAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,IAAA,WAAA,CAAA,KAAA,QAAA,CADA;AAEA,MAAA,cAAA,EAAA,IAAA,cAAA,CAAA,IAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA,aAAA,KAAA,CAAA,OAAA,CAAA,aAAA;AAAA;AADA,GAPA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA;AACA,OAFA;AAGA,KALA;AAMA,IAAA,aANA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOA,KAAA,WAAA,CAAA,aAAA,CAAA,KAAA,OAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,gBAAA,EAAA,6BAAA;;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,mBAAA,EAAA;AAAA,oBAAA,OAAA,EAAA;AAAA,mBAAA;AACA,iBAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,KAAA,CAAA,yCAAA,EAAA,KAAA;AACA,iBAPA,CAPA;;AAAA;AAiBA,qBAAA,WAAA,CAAA,gBAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,oBAAA,EAAA;AAAA,oBAAA,QAAA,EAAA;AAAA,mBAAA;AACA,iBAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,KAAA,CAAA,4BAAA,EAAA,KAAA;;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,oBAAA,EAAA;AAAA,oBAAA,QAAA,EAAA;AAAA,mBAAA;AACA,iBAPA;AAUA,qBAAA,IAAA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAVA,CAAA","sourcesContent":["<template>\n  <div>\n    <b-modal id=\"settings-delete\" ref=\"modal\" centered v-if=\"this.setting\" size=\"xs\">\n      <template slot=\"modal-header\">\n        <h6><font-awesome-icon icon=\"trash-alt\" size=\"1x\" />&nbsp;Delete setting</h6>\n      </template>\n\n      <template slot=\"default\">\n        Are you sure you want to delete setting '{{this.setting.key}}'.\n      </template>\n\n      <template slot=\"modal-footer\" slot-scope=\"{ cancel }\">\n        <b-button variant=\"outline-danger\" @click=\"deleteSetting()\">\n          <font-awesome-icon icon=\"trash-alt\" size=\"xs\" />&nbsp; delete\n        </b-button>\n        <b-button variant=\"outline-secondary\" @click=\"cancel()\">\n          <font-awesome-icon icon=\"times-circle\" size=\"xs\" />&nbsp; cancel\n        </b-button>\n      </template>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport Store from '../../store/store';\nimport RestService from '../../shared/service/rest-service';\nimport MessageService from '../../shared/service/message-service';\n\nexport default {\n  data() {\n    return {\n      restService: new RestService(this.$bvToast),\n      messageService: new MessageService(this)\n    }\n  }, \n  computed: {\n    setting() { return Store.getters.admin_setting; }\n  },\n  methods: {\n    hide() {\n      this.$nextTick(() => {\n        this.$refs.modal.hide();\n      });\n    },\n    async deleteSetting() {\n      await this.restService.deleteSetting(this.setting)\n        .then(response => {\n          this.messageService.info(\"Delete setting\", \"Setting deleted successful.\");\n          Store.commit('admin_setting_set', { setting: null } );\n        })\n         .catch(error => {\n          this.messageService.error(\"An error occured while deleting setting\", error); \n        }\n      );\n\n      this.restService.getAdminSettings()\n        .then(settings => {\n          Store.commit('admin_settings_set', { settings: settings });\n        })\n        .catch(error => {\n          this.messageService.error(\"Couldn't retrieve settings\", error);\n          Store.commit('admin_settings_set', { settings: [] } );\n        }\n      );\n\n      this.hide();\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components/settings"}]}